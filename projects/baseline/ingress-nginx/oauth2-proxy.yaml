---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  labels:
    k8s-app: oauth2-proxy
  name: oauth2-proxy
  namespace: ingress-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: oauth2-proxy
  template:
    metadata:
      labels:
        k8s-app: oauth2-proxy
    spec:
      nodeSelector:
        agentpool: default
      containers:
        - name: oauth2-proxy
          image: "quay.io/pusher/oauth2_proxy:v3.2.0"
          imagePullPolicy: IfNotPresent
          args:
            - --http-address=0.0.0.0:4180
            - --azure-tenant=418b0446-911f-42b4-8c8c-c4e27a1be63c
            - --provider=azure
            - --config=/etc/oauth2_proxy/oauth2_proxy.cfg
          env:
            - name: OAUTH2_PROXY_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: oauth2-proxy
                  key: client-id
            - name: OAUTH2_PROXY_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: oauth2-proxy
                  key: client-secret
            - name: OAUTH2_PROXY_COOKIE_SECRET
              valueFrom:
                secretKeyRef:
                  name: oauth2-proxy
                  key: cookie-secret
          ports:
            - containerPort: 4180
              name: http
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ping
              port: http
            initialDelaySeconds: 0
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /ping
              port: http
            initialDelaySeconds: 0
            timeoutSeconds: 1
            successThreshold: 1
            periodSeconds: 10
          resources: {}
          volumeMounts:
            - mountPath: /etc/oauth2_proxy
              name: configmain
      volumes:
        - configMap:
            defaultMode: 420
            name: oauth2-proxy
          name: configmain
      tolerations: []
---
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: oauth2-proxy
  name: oauth2-proxy
  namespace: ingress-nginx
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    k8s-app: oauth2-proxy
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    k8s-app: oauth2-proxy
  name: oauth2-proxy
  namespace: ingress-nginx
data:
  oauth2_proxy.cfg: "email_domains = [ \"*\" ]\nupstreams = [ \"file:///dev/null\" ]"
