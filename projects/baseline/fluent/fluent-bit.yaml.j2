apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit-config
  namespace: fluent
  labels:
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/part-of: fluent
data:
  # Configuration files: server, input, filters and output
  # ======================================================
  fluent-bit.conf: |
    [SERVICE]
        Flush         1
        Log_Level     info
        Daemon        off
        Parsers_File  parsers.conf
        HTTP_Server   On
        HTTP_Listen   0.0.0.0
        HTTP_Port     2020

    @INCLUDE input-kubernetes.conf
{% if isSharedService == 'false'%}
    @INCLUDE input-nginx.conf
{% endif %}
    @INCLUDE filter-kubernetes.conf
    @INCLUDE output-fluentd.conf

  input-kubernetes.conf: |
    [INPUT]
        Name              tail
        Tag               kube.*
        Path              /var/log/containers/*.log
        Exclude_Path      /var/log/containers/*_ingress-nginx-internal_*.log,/var/log/containers/*_kube-system_*.log
        Parser            docker
        DB                /var/log/flb_kube.db
        Mem_Buf_Limit     5MB
        Skip_Long_Lines   On
        Refresh_Interval  10
        
{% if isSharedService == 'false'%}
  input-nginx.conf: |
    [INPUT]
        Name              tail
        Tag               kube.*
        Path              /var/log/containers/nginx*.log
        Parser            nginx
        DB                /var/log/flb_nginx.db
        Mem_Buf_Limit     5MB
        Skip_Long_Lines   On
        Refresh_Interval  10

{% endif %}
  filter-kubernetes.conf: |
    [FILTER]
        Name                kubernetes
        Match               kube.*
        Kube_URL            https://kubernetes.default.svc.cluster.local:443
        Merge_Log           On
        K8S-Logging.Parser  On
        K8S-Logging.Exclude On

    [FILTER]
        Name    lua
        Match   kube.*
        script  dedot.lua
        call    dedot

    [FILTER]
        Name    record_modifier
        Match   *
        Record  deployment {{ resourceGroup }}

  output-fluentd.conf: |
    [OUTPUT]
        Name          forward
        Match         *
        Host          ${FLUENTD_HOST}
        Port          ${FLUENTD_PORT}

  parsers.conf: |
    [PARSER]
        Name        docker
        Format      json
        Time_Key    time
        Time_Format %Y-%m-%dT%H:%M:%S.%L
        Time_Keep   On
        # Command      |  Decoder | Field | Optional Action
        # =============|==================|=================
        Decode_Field_As   escaped    log

    [PARSER]
        Name        nucleus
        Format      regex
        Regex      ^(?<time>\S*)u0009(?<container>[^\/]+)\/(?<app>[^\/]+)\/(?<pid>\d+)u0009(?<level>[A-Z]+)u0009(?<source>\S*)u0009(?<message>.*)$
        Time_Key    time
        Time_Format %Y-%m-%dT%H:%M:%S.%LZ
        Time_Keep   On
        Decode_Field json message

    [PARSER]
        Name   nginx
        Format regex
        Regex ^(?<remote>[^ ]*) (?<host>[^ ]*) (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+) (?<path>\S*) (?<protocol>\S+)" (?<code>[0-9]+) (?<size>[0-9]*) "(?<referrer>[^"]+)" "(?<agent>[^"]+)" "(?<requester>[^"]+)"
        Time_Key time
        Time_Format %d/%b/%Y:%H:%M:%S %z

  dedot.lua: |
    function dedot(tag, timestamp, record)
      if record["kubernetes"] == nil then
        return 0, 0, 0
      end
      dedot_keys(record["kubernetes"]["annotations"])
      dedot_keys(record["kubernetes"]["labels"])
      return 1, timestamp, record
    end

    function dedot_keys(map)
      if map == nil then
        return
      end
      for k, v in pairs(map) do
        dedotted = string.gsub(k, "%.", "_")
        if k ~= dedotted then
          map[dedotted] = v
          map[k] = nil
        end
      end
    end

---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: fluent-bit
  namespace: fluent
  labels:
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/part-of: fluent
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: fluent-bit
        app.kubernetes.io/part-of: fluent
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "2020"
        prometheus.io/path: /api/v1/metrics/prometheus
    spec:
      containers:
      - name: fluent-bit
        image: fluent/fluent-bit:0.14.6
        imagePullPolicy: Always
        ports:
          - containerPort: 2020
        env:
        # Central Fluentd
        - name: FLUENTD_HOST
          value: "10.1.6.5"
        - name: FLUENTD_PORT
          value: "24224"
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: fluent-bit-config
          mountPath: /fluent-bit/etc/
      terminationGracePeriodSeconds: 10
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: fluent-bit-config
        configMap:
          name: fluent-bit-config
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      - key: dedicated
        operator: Equal
        value: esdata
        effect: NoSchedule
      - key: dedicated
        operator: Equal
        value: esother
        effect: NoSchedule
      serviceAccountName: fluent-bit-account
