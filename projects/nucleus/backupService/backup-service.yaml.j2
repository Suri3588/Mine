apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: backup-service
  namespace: nucleus
  labels:
    app.kubernetes.io/name: backup-service
    app.kubernetes.io/part-of: nucleus
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: backup-service
        deployment: {{ resourceGroup }}
      annotations:
        fluentbit.io/parser: nucleus
        linkerd.io/inject: enabled
    spec:
      nodeSelector:
        agentpool: dataprocpool
      hostAliases:
      {% for mongo in mongos %}
      - ip: "{{ mongo.ipAddress }}"
        hostnames:
        - "{{ mongo.name }}"
      {% endfor %}
      containers:
      - name: backup-service
        image: {{ dockerRegistry }}{{ backupServiceImage }}
        imagePullPolicy: IfNotPresent
        command:
        - node
        args:
        - "/service/bundle/main.js"
        resources:
          requests:
            cpu: "0.2"
            memory: "500Mi"
          limits:
            cpu: "1"
            memory: "2Gi"
        envFrom:
        - configMapRef:
            name: shared-config
        - configMapRef:
            name: backup-service-config
        env:
        - name: MONGO_URL
          valueFrom:
            secretKeyRef:
              name: mongo-secrets
              key: MONGO_URL
        - name: NUCLEUS_INGESTION_MONGO_URL
          valueFrom:
            secretKeyRef:
              name: mongo-secrets
              key: NUCLEUS_INGESTION_MONGO_URL
        - name: METEOR_SETTINGS
          valueFrom:
            secretKeyRef:
              name: backup-service-secret
              key: METEOR_SETTINGS
        - name: APP_INSIGHTS_KEY
          valueFrom:
            secretKeyRef:
              name: app-insights-secrets
              key: APP_INSIGHTS_KEY
      imagePullSecrets:
      - name: regcred
