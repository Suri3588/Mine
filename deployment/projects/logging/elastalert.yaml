---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elastalert
  namespace: logging
  labels:    
    app.kubernetes.io/name: elastalert
    app.kubernetes.io/part-of: logging
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: elastalert
      app.kubernetes.io/part-of: logging
  replicas: 1
  revisionHistoryLimit: 5
  template:
    metadata:
      labels:    
        app.kubernetes.io/name: elastalert
        app.kubernetes.io/part-of: logging      
    spec:
      nodeSelector:
        agentpool: monpool
      initContainers:
      - name: init
        image: busybox
      containers:
      - name: elastalert
        image: "jertel/elastalert-docker"
        imagePullPolicy: IfNotPresent
# If we want to run the elastalert in verbose mode
#        command: ["/bin/sh"]
#        args: ["-c", "/opt/elastalert/run.sh --verbose"]
        volumeMounts:
          - name: elastalert-config
            mountPath: '/opt/config/elastalert_config.yaml'
            subPath: elastalert_config.yaml
            readOnly: true
          - name: elastalert-smtp-config
            mountPath: '/opt/config/elastalert-smtp-config.yaml'
            subPath: elastalert-smtp-config.yaml
            readOnly: true
          - name: elastalert-rules
            mountPath: '/opt/rules'          
        resources:
            {}
      restartPolicy: Always
      volumes:
        - name: elastalert-rules
          secret:
            secretName: elastalert-rules
            items:
              - key: chunkCount-1K
                path: chunkCount-1K.yaml
              - key: chunkCount-3K
                path: chunkCount-3K.yaml
              - key: Mongo-Fatal-Error
                path: Mongo-Fatal-Error.yaml
              - key: pm2-restartloopalert-edgeservers
                path: pm2-restartloopalert-edgeservers.yaml  
        - name: elastalert-smtp-config
          secret:
            secretName: elastalert-smtp-config
        - name: elastalert-config
          secret:
            secretName: elastalert-config